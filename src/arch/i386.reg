/* $Id$ */
REG(al,	8,	0x00, "General-purpose register (lowest 8-bits of ax)")
REG(cl,	8,	0x01, "General-purpose register (lowest 8-bits of cx)")
REG(dl,	8,	0x02, "General-purpose register (lowest 8-bits of dx)")
REG(bl,	8,	0x03, "General-purpose register (lowest 8-bits of bx)")
REG(ah,	8,	0x04, "General-purpose register (highest 8-bits of ax)")
REG(ch,	8,	0x05, "General-purpose register (highest 8-bits of cx)")
REG(dh,	8,	0x06, "General-purpose register (highest 8-bits of dx)")
REG(bh,	8,	0x07, "General-purpose register (highest 8-bits of bx)")
REG(ax,	16,	0x00, "General-purpose register (lowest 16-bits of eax)")
REG(cx,	16,	0x01, "General-purpose register (lowest 16-bits of ecx)")
REG(dx,	16,	0x02, "General-purpose register (lowest 16-bits of edx)")
REG(bx,	16,	0x03, "General-purpose register (lowest 16-bits of ebx)")
REG(sp, 16,	0x04, "Stack pointer")
REG(bp, 16,	0x05, "Base pointer")
REG(si, 16,	0x06, "Array index")
REG(di, 16,	0x07, "Array index")
REG(cs, 16,	0x08, "Segment register")
REG(ss, 16,	0x09, "Segment register")
REG(ds, 16,	0x0a, "Segment register")
REG(es, 16,	0x0b, "Segment register")
REG(fs, 16,	0x0c, "Segment register")
REG(gs, 16,	0x0d, "Segment register")
#ifndef ARCH_i386_real
REG(eax,32,	0x00, "General-purpose register")
REG(ecx,32,	0x01, "General-purpose register")
REG(edx,32,	0x02, "General-purpose register")
REG(ebx,32,	0x03, "General-purpose register")
REG(esp,32,	0x04, "Stack pointer")
REG(ebp,32,	0x05, "Base pointer")
REG(esi,32,	0x06, "Array index")
REG(edi,32,	0x07, "Array index")
#endif /* !ARCH_i386_real */
REG(cr0,32,	0x00, "Control register")
REG(cr1,32,	0x01, "Control register")
REG(cr2,32,	0x02, "Control register")
REG(cr3,32,	0x03, "Control register")
REG(cr4,32,	0x04, "Control register")
REG(cr5,32,	0x05, "Control register")
REG(cr6,32,	0x06, "Control register")
REG(cr7,32,	0x07, "Control register")
REG(st0,32,	0x08, "Floating-point register")
REG(st1,32,	0x09, "Floating-point register")
REG(st2,32,	0x0a, "Floating-point register")
REG(st3,32,	0x0b, "Floating-point register")
REG(st4,32,	0x0c, "Floating-point register")
REG(st5,32,	0x0d, "Floating-point register")
REG(st6,32,	0x0e, "Floating-point register")
REG(st7,32,	0x0f, "Floating-point register")
