/* $Id$ */
REG(al,	8,	0x00, "General-purpose register")
REG(cl,	8,	0x01, "General-purpose register")
REG(dl,	8,	0x02, "General-purpose register")
REG(bl,	8,	0x03, "General-purpose register")
REG(ah,	8,	0x04, "General-purpose register")
REG(ch,	8,	0x05, "General-purpose register")
REG(dh,	8,	0x06, "General-purpose register")
REG(bh,	8,	0x07, "General-purpose register")
REG(ax,	16,	0x00, "General-purpose register")
REG(cx,	16,	0x01, "General-purpose register")
REG(dx,	16,	0x02, "General-purpose register")
REG(bx,	16,	0x03, "General-purpose register")
REG(sp, 16,	0x04, "Stack pointer")
REG(bp, 16,	0x05, "Base pointer")
REG(si, 16,	0x06, "Array index")
REG(di, 16,	0x07, "Array index")
REG(cs, 16,	0x08, "Segment register")
REG(ss, 16,	0x09, "Segment register")
REG(ds, 16,	0x0a, "Segment register")
REG(es, 16,	0x0b, "Segment register")
REG(fs, 16,	0x0c, "Segment register")
REG(gs, 16,	0x0d, "Segment register")
#ifndef ARCH_i386_real
REG(eax,32,	0x00, "General-purpose register")
REG(ecx,32,	0x01, "General-purpose register")
REG(edx,32,	0x02, "General-purpose register")
REG(ebx,32,	0x03, "General-purpose register")
REG(esp,32,	0x04, "Stack pointer")
REG(ebp,32,	0x05, "Base pointer")
REG(esi,32,	0x06, "Array index")
REG(edi,32,	0x07, "Array index")
#endif /* !ARCH_i386_real */
REG(cr0,32,	0x00, NULL)
REG(cr1,32,	0x01, NULL)
REG(cr2,32,	0x02, NULL)
REG(cr3,32,	0x03, NULL)
REG(cr4,32,	0x04, NULL)
REG(cr5,32,	0x05, NULL)
REG(cr6,32,	0x06, NULL)
REG(cr7,32,	0x07, NULL)
REG(st0,32,	0x08, NULL)
REG(st1,32,	0x09, NULL)
REG(st2,32,	0x0a, NULL)
REG(st3,32,	0x0b, NULL)
REG(st4,32,	0x0c, NULL)
REG(st5,32,	0x0d, NULL)
REG(st6,32,	0x0e, NULL)
REG(st7,32,	0x0f, NULL)
